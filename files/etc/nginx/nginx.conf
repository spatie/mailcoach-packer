user  www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    multi_accept on;
}

http {
    ##
    # Basic Settings
    ##
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    server_names_hash_bucket_size 128;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##
    gzip on;
    gzip_disable "msie6";

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xm$

    server {
        listen 80 default_server;

        server_name $domain www.$domain;
        root /var/www/html/public;

        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";

        index index.html index.htm index.php;

        charset utf-8;

        # serve static files directly
    	location ~* \.(jpg|jpeg|gif|css|png|js|ico|html)$ {
    		access_log off;
    		expires max;
    		log_not_found off;
    	}

    	# removes trailing slashes (prevents SEO duplicate content issues)
    	if (!-d $request_filename)
    	{
    		rewrite ^/(.+)/$ /$1 permanent;
    	}

    	# unless the request is for a valid file (image, js, css, etc.), send to bootstrap
    	if (!-e $request_filename)
    	{
    		rewrite ^/(.*)$ /index.php?/$1 last;
    		break;
    	}

    	location / {
    		try_files $uri $uri/ /index.php?$query_string;
    	}

    	location ~* \.php$ {
            try_files $uri = 404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass unix:/run/php/php7.4-fpm.sock;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
        }

        location ~ /\.ht {
    		deny all;
    	}
    }
}

# override global parameters e.g. worker_rlimit_nofile
include /etc/nginx/*global_params;
